#!/bin/sh
#####################################################################
# BenchIT - Performance Measurement for Scientific Applications
# Contact: benchit@zih.tu-dresden.de
#
# Last change by: $Author: william $
# $Revision: 1.1 $
# $Date: 2007/06/29 09:47:35 $
#####################################################################

###############################
#      !!! Important !!!      #
###############################
#                             #
# The kernel needs additional #
# source files.               #
# see ./src/ToDo.txt          #
#                             #
###############################

 # in the src/ folder use "make" to get 
 # a list of all possible target architectures
 IOZONE_COMPILE_ARCH=linux-AMD64

 # name of the file to use
 BENCHIT_KERNEL_FILENAME="/var/tmp/iozone.out"

 # The max file size to be written.
 # use:
 #		k .. Kb
 #		m .. Mb
 #		g .. Gb
 BENCHIT_KERNEL_FILESIZE_MAX=32m

 # file access stride in multiples of recordsize
 # iozone's default is 17
 BENCHIT_KERNEL_FILESTRIDE=17
 
 # must be in byte
 BENCHIT_KERNEL_CACHELINE_SIZE=64
 
 # must be in Kbytes
 BENCHIT_KERNEL_CACHE_SIZE=512

 #additional Options
 #	-B		Use mmap() files
 #	-D		Use msync(MS_ASYNC) on mmap files
 #	-G		Use msync(MS_SYNC) on mmap files
 #	-c		Include close() in the timing calculations
 #	-e		Include flush (fsync,fflush) in the timing calculations
 #	-j #	Set stride of file accesses to (# * record size). 
 #			The stride read test will read records at this stride.
 #	-J #	Perform a compute delay of this many milliseconds before each I/O operation
 #	-K		Generate some random accesses during the normal testing.
 #	-m		Tells Iozone to use multiple buffers internally
 #	-o		Iozone will open the files with the O_SYNC flag.
 #	-p		This purges the processor cache before each file operation
 #	-Q		Create offset/latency files
 #	-Z		Enable mixing mmap I/O and file I/O.
 #	-+n 	No retests selected.
 #	-+q 	Delay in seconds between tests.
 BENCHIT_KERNEL_OPTIONS="-c -e -p"


 # Describe your own kernel modifications
 export BENCHIT_KERNEL_COMMENT="FileStride=${BENCHIT_KERNEL_FILESTRIDE}, CacheSize=${BENCHIT_KERNEL_CACHE_SIZE}, CacheLineSize=${BENCHIT_KERNEL_CACHELINE_SIZE}, Options=${BENCHIT_KERNEL_OPTIONS}"

 # Parameters for run_benchit; uncomment and change the ones you need
 # maximum memory for processes in kB
 #BENCHIT_RUN_MEMORY=1024
 # number of processors
 #BENCHIT_NUM_CPUS=1
 # set core file size limit in kB
 #BENCHIT_RUN_CORESIZE=1024
 # print all output to file
 #BENCHIT_RUN_OUTPUTFILE=output.txt
 # remove executable after run, if 1
 #BENCHIT_RUN_CLEAN=0
 # do not execute anything, just print out comments
 #BENCHIT_RUN_TEST="1"
 # timelimit used for enqueueing the job; this is NOT BENCHIT_TOTAL_TIMELIMIT
 #BENCHIT_RUN_QUEUETIMELIMIT=


#####################################################################
# Log-History
#
# $Log: PARAMETERS,v $
# Revision 1.1  2007/06/29 09:47:35  william
# initial checkin - kernel works but has its flaws
#
#
#####################################################################
