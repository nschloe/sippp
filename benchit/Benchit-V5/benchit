#!/bin/sh

#****h* BenchIT/benchit
# NAME
#  CLI -- Command Line Interface
# DESCRIPTION
#  To ease the work nessessary to produce measurement results in benchit
#  when its not possible to use the java-based graphical user interface
#  we provide you with this shellbased command line interface (CLI). It
#  will guide you through the steps needed to fullfill a benchmark run.
#
#  SEE ALSO
#   tools/helper.sh
#******
#

##########################################################
#                                                        #
# lets you control all nessessary functionality of       #
# BenchIT needed to do your measurements                 #
#                                                        #
##########################################################

# Set BENCHIT_EDITOR variable to the editor you want to use
# This will prevent benchit from asking each time it starts
#BENCHIT_EDITOR="vi"

##########################################################
############ DONT CROSS THAT LINE ;-) ####################
##########################################################

#****f* benchit/menu
# NAME
#  menu()
# FUNCTION
#  creates the menustructure depending on what you have already done 
#  and which steps are available too you at the moment.
#******
menu() {
	printf "\n"
	itemcount=0
	menuitem_selkernel=0
	menuitem_setparams=0
	menuitem_compile=0
	menuitem_run=0
	menuitem_viewresults=0
	menuitem_cleanup=0
	menuitem_exit=0
	menuitem_gui=0

	if [ -f "${GUI_SCRIPT}" ]; then
		itemcount=$(( itemcount+1 ))
		echo " [${itemcount}] Start GUI"
		menuitem_gui="${itemcount}"
	fi

	itemcount=$(( itemcount+1 ))
	echo " [${itemcount}] Select your set of kernels"
	menuitem_selkernel="${itemcount}"

	if [ -f ${BENCHITDIR}/availablekernel.txt ]; then
		itemcount=$(( itemcount+1 ))
		echo " [${itemcount}] Set parameters for your kernelset"
		menuitem_setparams="${itemcount}"

		if [ -f ${BENCHITDIR}/benchit-PARAMETERS ]; then
			itemcount=$(( itemcount+1 ))
			echo " [${itemcount}] Compile your kernelset"
			menuitem_compile="${itemcount}"

			if [ "${COMPILED_SUCCESSFULLY}" = "1" ]; then
				itemcount=$(( itemcount+1 ))
				echo " [${itemcount}] Run your kernelset"
				menuitem_run="${itemcount}"
			fi
		fi
	fi

	resultsavailable=""
	if [ -d output ]; then
		if [ -f "${BENCHITDIR}/availablekernel.txt" ]; then
			LISTOFKERNEL=`cat "${BENCHITDIR}/availablekernel.txt"`
			for KERNEL in ${LISTOFKERNEL}; do
				KERNEL="`echo ${KERNEL#*kernel/}`"
				# get the 3 most recent results
				if [ -d "${BENCHITDIR}/output/${KERNEL}/" ]; then
					`ls -t1 "${BENCHITDIR}/output/${KERNEL}/"*.bit >/dev/null 2>&1`
					[ $? -eq 0 ] && resultsavailable="1"
				fi
			done
		fi
	fi

	if [ -z "${resultsavailable}" ]; then
		echo " [!] No outputfiles for the selected kernels available"
	else
		itemcount=$(( itemcount+1 ))
		echo " [${itemcount}] View the most recent resultfile of each selected kernel"
		menuitem_viewresults="${itemcount}"
	fi

	if [ -f ${BENCHITDIR}/availablekernel.txt ]; then
		itemcount=$(( itemcount+1 ))
		echo " [${itemcount}] Cleanup all generated files"
		menuitem_cleanup="${itemcount}"
	fi

	itemcount=$(( itemcount+1 ))
	echo " [${itemcount}] Exit "
	menuitem_exit="${itemcount}"
	echo "" 
}


# change to the BenchIT Directory
cd `dirname ${0}` || exit 1

export BENCHITDIR="`pwd`"
GUI_SCRIPT="${BENCHITDIR}/gui/bin/GUI.sh"
LISTOFKERNEL=""

export OSNAME="`uname`"
export COMPILED_SUCCESSFULLY=0

export menuitem_selkernel=0
export menuitem_setparams=0
export menuitem_compile=0
export menuitem_run=0
export menuitem_viewresults=0
export menuitem_cleanup=0
export menuitem_exit=0
export menuitem_gui=0

clear

if [ -n "${EDITOR}" ]; then
	BENCHIT_EDITOR="${EDITOR}"
fi
if [ -z "${BENCHIT_EDITOR}" ]; then
	echo "Type in the name of your editor"
	echo "or just press enter to use \"vi\""
	read INPUT
	if [ -z "${INPUT}" ]; then
		BENCHIT_EDITOR="vi"
	else
		BENCHIT_EDITOR="${INPUT}"
	fi
fi
export BENCHIT_EDITOR

INPUT="-1"
until [ "${INPUT}" = "${menuitem_exit}" ]; do
	INPUT="0" # clear input from last loop
	clear
	echo
	echo "******************************"
	echo "** Welcome to B-e-n-c-h-I-T **"
	echo "******************************"
	echo
	echo "Please type in the number of the menu entry you want to select:"
	menu
	if [ "${OSNAME}" = "Linux" ]; then
		read -p "number: " -n 1 INPUT
	else
		read INPUT
	fi

	while [ "${INPUT}" -gt "${itemcount}" ]; do
		clear
		echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
		echo "!!!Your menu-entry-number doesn't exist!!!"
		echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
		echo
		echo "Please use a number between 1 and ${itemcount}" 
		menu
		if [ "${OSNAME}" = "Linux" ]; then
			read -p "number: " -n 1 INPUT
		else
			read INPUT
		fi
	done

	clear
	cd ${BENCHITDIR}
	./tools/helper.sh "${INPUT}"
	[ $? -eq 80 ] && COMPILED_SUCCESSFULLY="1"
	cd ${BENCHITDIR}
done

###############################################################################
#  Log-History
#
#  $Log: benchit,v $
#  Revision 1.18  2006/09/29 16:36:23  william
#  added documentation for robodoc
#
#  Revision 1.17  2005/12/12 10:27:20  mickler
#  # Changed menu entry "view results" to show only the most recent result
#    file of each kernel (instead of 3)
#
#  Revision 1.16  2005/11/25 10:21:08  mickler
#  # Changed some comparisons
#
#  Revision 1.15  2005/11/24 03:30:44  mickler
#  # Cosmetic changes
#
#  Revision 1.14  2005/10/26 14:11:58  mickler
#  - spelling mistakes removed
#  # changed kernelparameters.txt to benchit-PARAMETERS
#
#  Revision 1.13  2005/10/24 12:30:09  mickler
#  - Fixed missing ""
#
#  Revision 1.12  2005/09/12 16:03:29  mickler
#  - Fixed: Did not run correctly on all platforms
#
#  Revision 1.11  2005/09/12 14:29:46  mickler
#  - Fixed: predefined editor was not ok
#
#  Revision 1.10  2005/09/12 12:48:54  mickler
#  - Fixed: Starting GUI from within benchit
#
#  Revision 1.9  2005/09/11 22:47:37  mickler
#  # Adapted to new environment (mostly related to viewing output files)
#
#  Revision 1.8  2005/08/30 22:23:59  mickler
#  + CHANGED: shell variable BENCHIT_KERNEL_NAME_STRING renamed to
#    BENCHIT_KERNELNAME and made necessary changes in COMPILE.SHs and
#    main BenchIT files (benchit.c, JBI.java, ...)
#  - FIXED: user settings for e.g. linear measurement were not used,
#    added the ${BENCHIT_DEFINES} to the compile commands in COMPILE.SHs
#
#  Revision 1.7  2005/08/30 19:28:51  mickler
#  - FIXED: First line had <space> between #! and the shell interpreter
#
#  Revision 1.6  2005/08/25 13:03:49  william
#  minor bug only visible in c-shells
#
#  Revision 1.5  2005/08/23 13:17:45  william
#  a missing whitespace inserted
#
#  Revision 1.4  2005/08/23 13:11:02  william
#  added a new ENVIRONMENT - corrected some nasty copy&paste-errors
#
#  Revision 1.3  2005/08/23 12:03:38  william
#  changed some not-sh-conform patterns
#
#  Revision 1.2  2005/07/19 12:16:50  wloch
#  added cvs footer
#
#
###############################################################################
